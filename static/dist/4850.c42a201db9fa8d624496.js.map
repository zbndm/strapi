{"version":3,"file":"4850.c42a201db9fa8d624496.js","mappings":"sEA6CAA,EAAOC,QArCP,SAAcC,GACZ,MAeMC,EAAW,CAAEC,cAAe,CAChC,OACA,QACA,QACAC,KAAK,MAEP,MAAO,CACLC,KAAM,OACNC,SAAU,CAvBM,CAChBC,UAAW,OACXC,MAAO,8BACPC,UAAW,MAEO,CAClBC,MAAO,YACPH,UAAW,cACXE,UAAW,GAkBTR,EAAKU,kBACLT,EACAD,EAAKW,cACLX,EAAKY,oBACLZ,EAAKa,sBAEPC,QAAS","sources":["webpack://o9/./node_modules/highlight.js/lib/languages/json.js"],"sourcesContent":["/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  // normally we would rely on `keywords` for this but using a mode here allows us\n  // to use the very tight `illegal: \\S` rule later to flag any other character\n  // as illegal indicating that despite looking like JSON we do not truly have\n  // JSON and thus improve false-positively greatly since JSON will try and claim\n  // all sorts of JSON looking stuff\n  const LITERALS = { beginKeywords: [\n    \"true\",\n    \"false\",\n    \"null\"\n  ].join(\" \") };\n\n  return {\n    name: 'JSON',\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nmodule.exports = json;\n"],"names":["module","exports","hljs","LITERALS","beginKeywords","join","name","contains","className","begin","relevance","match","QUOTE_STRING_MODE","C_NUMBER_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","illegal"],"sourceRoot":""}